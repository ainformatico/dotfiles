[user]
  email = aeinformatico@gmail.com
  name = Alejandro Dev.

[github]
  user = ainformatico

[push]
  ;default = current # only pushes the current branch
  ;autoSetupRemote = true # Don't use it as it will push the old branch after a rename
  default = upstream
  ;default = matching

[core]
  editor=vim

[alias]
  dd = reset -p
  com = commit -m
  co = checkout
  go = checkout -b
  b = branch -v
  del = branch -d
  st = status -u
  l = log --stat --graph --branches
  lg = log --graph --branches --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  d = diff -p -C -m
  df = diff --cached -p -C -m
  last = show HEAD
  u = add -u
  p = add -p
  pa = "! git add --intent-to-add . && git p"
  top = shortlog --email --summary --numbered
  prune = "! git clean -df"
  pp = "! git pull && git push"
  wipe = fetch -p
  eat = stash save
  digest = stash show -p
  poop = stash pop
  fix = commit --amend --no-edit
  amend = commit --amend
  rb = rebase -i
  hammer = push --force-with-lease

[diff]
  tool = vimdiff

[color]
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow
  frag = magenta
  old = red
  new = green

[color "status"]
  added = green
  changed = yellow
  untracked = red

[mergetool]
  prompt = false

[mergetool "mvimdiff"]
  cmd="mvimdiff -c 'Gdiff' $MERGED" # use fugitive.vim for 3-way merge
  keepbackup=false

[merge]
  tool = mvimdiff

[rebase]
  autosquash = true

[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f

[filter "hawser"]
  clean = git hawser clean %f
  smudge = git hawser smudge %f
  required = true

[filter "lfs"]
  clean = git lfs clean %f
  smudge = git lfs smudge %f
  required = true

[status]
  showUntrackedFiles = all

[commit]
  verbose = true
